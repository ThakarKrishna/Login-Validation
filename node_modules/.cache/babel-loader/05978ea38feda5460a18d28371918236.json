{"ast":null,"code":"var _jsxFileName = \"/home/krishna/Documents/Workspace/Projects/Login-Validation/src/Components/Registration.js\",\n    _s = $RefreshSig$();\n\nimport Login from \"./Login\";\nimport { useState, useEffect } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getDatafromLS = () => {\n  const data = localStorage.getItem('details');\n\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return [];\n  }\n};\n\nconst Registration = () => {\n  _s();\n\n  const [isFormSubmitted, setFormSubmitted] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, setLogin] = useState(\"true\");\n  const [phone, setPhone] = useState(\"\");\n  const [details, setDetails] = useState(getDatafromLS());\n  const [formValue, setFormValue] = useState({\n    userName: ''\n  }); // const [errors,setErrors] =s\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setFormSubmitted(true);\n    let detail = {\n      username,\n      email,\n      password,\n      phone\n    };\n    setDetails([...details, detail]);\n    setUsername(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setPhone(\"\");\n\n    if (username.trim() === \"\") {\n      // alert(\"username is required\");\n\n      /*#__PURE__*/\n      _jsxDEV(Alert, {\n        variant: \"success\",\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 38\n        }, this), \" Successfully Registered...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this);\n    } else if (email.trim() === \"\") {\n      alert(\"Email is required\");\n    } else if (password.trim() === \"\") {\n      alert(\"Password is required\");\n    } else if (phone.trim() === \"\") {\n      alert(\"Phone is required\");\n\n      /*#__PURE__*/\n      _jsxDEV(Alert, {\n        variant: \"primary\",\n        children: \" Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this);\n    } else {\n      setFormSubmitted(false);\n\n      /*#__PURE__*/\n      _jsxDEV(Alert, {\n        variant: \"success\",\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 38\n        }, this), \" Successfully Registered...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this);\n\n      setLogin(!Login);\n    } // {details.map((value,i) =>{\n    // if(!value){\n    //     return(\n    //         <p key={i}>{errors.name}is required</p>\n    //     );\n    // setFlag(true);\n    // }\n    // else{\n    //     setFlag(false);\n    //         <Alert variant='success'><ThumbUpIcon/> Successfully Registered...</Alert>\n    // setLogin(!Login);\n    // }\n    // })}\n    //     if (!username ) {\n    //         setFlag(true);\n    //     }\n    //     else {\n    //         setFlag(false);\n    //         <Alert variant='success'><ThumbUpIcon/> Successfully Registered...</Alert>\n    //         setLogin(!Login);\n    // }\n\n  };\n\n  const handleChange = e => {\n    setFormValue({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleClick = () => {\n    setLogin(!login);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('details', JSON.stringify(details));\n  }, [details]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-3\",\n      children: [\" \", login ? /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          onSubmit(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mt-5\",\n          children: \"Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          \"aria-autocomplete\": \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"username\",\n            name: \"userName\",\n            onChange: handleChange,\n            placeholder: \"Enter Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), isFormSubmitted && formValue.userName == \"\" && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"Email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"Password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            onChange: e => setPassword(e.target.value),\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Phone no.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"phone\",\n            name: \"phone\",\n            placeholder: \"Enter phone no.\",\n            onChange: e => setPhone(e.target.value),\n            value: phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          style: {\n            marginLeft: \"1rem\"\n          },\n          type: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleClick,\n          className: \"text-center \",\n          style: {\n            marginLeft: \"31rem\",\n            cursor: \"pointer\"\n          },\n          children: [\"Already registered\", \" \", \"log in?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Registration, \"2TwBByWzi1zB3uyDp2EaYlAWEp4=\");\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/krishna/Documents/Workspace/Projects/Login-Validation/src/Components/Registration.js"],"names":["Login","useState","useEffect","Form","Button","Alert","ThumbUpIcon","getDatafromLS","data","localStorage","getItem","JSON","parse","Registration","isFormSubmitted","setFormSubmitted","username","setUsername","email","setEmail","password","setPassword","login","setLogin","phone","setPhone","details","setDetails","formValue","setFormValue","userName","onSubmit","e","preventDefault","detail","trim","alert","handleChange","target","name","value","handleClick","setItem","stringify","marginLeft","cursor"],"mappings":"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","sourcesContent":["import Login from \"./Login\";\nimport { useState, useEffect } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\n\nconst getDatafromLS = () => {\n    const data = localStorage.getItem('details');\n    if (data) {\n        return JSON.parse(data);\n    }\n    else {\n        return []\n    }\n}\n\n\n\n\nconst Registration = () => {\n\n    const [isFormSubmitted, setFormSubmitted] = useState(false);\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [login, setLogin] = useState(\"true\");\n    const [phone, setPhone] = useState(\"\");\n    const [details, setDetails] = useState(getDatafromLS());\n    const [formValue, setFormValue] = useState({\n        userName: ''\n    });\n\n    // const [errors,setErrors] =s\n\n\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setFormSubmitted(true);\n\n\n        let detail = {\n            username,\n            email,\n            password,\n            phone\n\n        }\n        setDetails([...details, detail]);\n        setUsername(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setPhone(\"\");\n\n\n        if (username.trim() === \"\") {\n            // alert(\"username is required\");\n            <Alert variant='success'><ThumbUpIcon /> Successfully Registered...</Alert>\n        } else if (email.trim() === \"\") {\n            alert(\"Email is required\");\n        } else if (password.trim() === \"\") {\n            alert(\"Password is required\");\n        } else if (phone.trim() === \"\") {\n            alert(\"Phone is required\");\n            <Alert variant='primary'> Required</Alert>\n        } else {\n            setFormSubmitted(false);\n            <Alert variant='success'><ThumbUpIcon /> Successfully Registered...</Alert>\n\n\n\n            setLogin(!Login);\n        }\n\n\n\n\n\n\n\n        // {details.map((value,i) =>{\n        // if(!value){\n        //     return(\n        //         <p key={i}>{errors.name}is required</p>\n        //     );\n        // setFlag(true);\n\n        // }\n        // else{\n        //     setFlag(false);\n        //         <Alert variant='success'><ThumbUpIcon/> Successfully Registered...</Alert>\n\n\n\n        // setLogin(!Login);\n        // }\n        // })}\n\n\n\n        //     if (!username ) {\n        //         setFlag(true);\n\n\n        //     }\n        //     else {\n        //         setFlag(false);\n        //         <Alert variant='success'><ThumbUpIcon/> Successfully Registered...</Alert>\n\n\n\n        //         setLogin(!Login);\n\n        // }\n    }\n\n\n    const handleChange = (e) => {\n        setFormValue({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleClick = () => {\n        setLogin(!login);\n\n    }\n\n    useEffect(() => {\n        localStorage.setItem('details', JSON.stringify(details));\n    }, [details])\n    return (\n        <>\n            <div className=\"container mt-3\">\n\n                {\" \"}\n                {login ? (\n\n\n                    <Form onSubmit={(e) => { onSubmit(e) }}>\n                        <h1 className=\"text-center mt-5\">Registration</h1>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" aria-autocomplete=\"off\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"username\" name=\"userName\" onChange={handleChange} placeholder=\"Enter Username\"\n                            />\n                            {\n                                isFormSubmitted && formValue.userName == \"\" &&\n                                <label>Username is required</label>\n                            }\n                        </Form.Group>\n                        {/* {errors.username.length >0  && \n        <span>{errors.username}</span>} */}\n\n                        <Form.Group className=\"mb-3\" controlId=\"Email\" >\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" />\n\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"Password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={(e) => setPassword(e.target.value)} value={password} />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                            <Form.Label>Phone no.</Form.Label>\n                            <Form.Control type=\"phone\" name=\"phone\" placeholder=\"Enter phone no.\" onChange={(e) => setPhone(e.target.value)} value={phone} />\n                        </Form.Group>\n\n                        <Button variant=\"dark\" type=\"submit\">\n                            Submit\n                        </Button>\n\n                        <Button variant=\"dark\" style={{ marginLeft: \"1rem\" }} type=\"reset\" >Reset</Button>\n\n\n                        <p onClick={handleClick} className=\"text-center \" style={{ marginLeft: \"31rem\", cursor: \"pointer\" }}>\n                            Already registered{\" \"}log in?\n\n                        </p>\n                        {/* {flag && (\n                            <Alert color=\"primary\" variant=\"danger\">\n                                Every Field is important !\n                            </Alert>)} */}\n                    </Form>\n\n\n\n                ) : (\n                    <Login />\n                )}\n            </div>\n        </>\n    )\n\n}\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}