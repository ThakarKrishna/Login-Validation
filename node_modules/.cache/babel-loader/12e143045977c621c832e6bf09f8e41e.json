{"ast":null,"code":"var _jsxFileName = \"/home/krishna/Documents/Workspace/Projects/Login-Validation/src/App.js\";\n// import './App.css';\n// // import Registration from './Components/Registration';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// const App = ()=>{\n//   return(\n//     <>\n//     {/* <Registration/> */}\n//     </>\n//   )\n// }\n// export default App;\nimport React from \"react\";\nimport * as yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Form, Col, InputGroup, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const schema = yup.object().shape({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    username: yup.string().required(),\n    terms: yup.bool().required().oneOf([true], \"term must be accepted\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: console.log,\n      initialValues: {\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        terms: false\n      },\n      children: _ref => {\n        let {\n          handleSubmit,\n          handleChange,\n          values,\n          touched,\n          errors\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            md: \"\",\n            controlId: \"validationFormik01\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              placeholder: \"First Name\",\n              value: values.firstName,\n              onChange: handleChange,\n              isValid: touched.firstName && !errors.firstName,\n              isInvalid: !!errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"validationFormik02\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              placeholder: \"Last Name\",\n              value: values.lastName,\n              onChange: handleChange,\n              isInvalid: !!errors.lastName,\n              isValid: touched.lastName && !errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"validationFormikUsername\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              isValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  id: \"inputGroupPrepend\",\n                  children: \"@\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Username\",\n                \"aria-describedby\": \"inputGroupPrepend\",\n                name: \"username\",\n                value: values.username,\n                onChange: handleChange,\n                isInvalid: !!errors.username,\n                isValid: touched.username && !errors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              required: true,\n              name: \"terms\",\n              label: \"Agree to terms and conditions\",\n              onChange: handleChange,\n              isInvalid: !!errors.terms,\n              feedback: errors.terms,\n              id: \"validationFormik0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/krishna/Documents/Workspace/Projects/Login-Validation/src/App.js"],"names":["React","yup","Formik","Form","Col","InputGroup","Button","App","schema","object","shape","firstName","string","required","lastName","username","terms","bool","oneOf","console","log","handleSubmit","handleChange","values","touched","errors"],"mappings":"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","sourcesContent":["// import './App.css';\n// // import Registration from './Components/Registration';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const App = ()=>{\n//   return(\n//     <>\n//     {/* <Registration/> */}\n//     </>\n//   )\n// }\n\n// export default App;\n\n\nimport React from \"react\";\nimport * as yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Form, Col, InputGroup, Button } from \"react-bootstrap\";\nimport \"./App.css\";\n\nfunction App() {\n  const schema = yup.object().shape({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    username: yup.string().required(),\n    terms: yup.bool().required().oneOf([true], \"term must be accepted\"),\n  });\n  return (\n    <div className=\"App\">\n      <Formik\n        validationSchema={schema}\n        onSubmit={console.log}\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          username: \"\",\n          terms: false,\n        }}\n      >\n        {({ handleSubmit, handleChange, values, touched, errors }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group md=\"\" controlId=\"validationFormik01\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                value={values.firstName}\n                onChange={handleChange}\n                isValid={touched.firstName && !errors.firstName}\n                isInvalid={!!errors.lastName}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.firstName}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"validationFormik02\">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                value={values.lastName}\n                onChange={handleChange}\n                isInvalid={!!errors.lastName}\n                isValid={touched.lastName && !errors.lastName}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.lastName}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"validationFormikUsername\">\n              <Form.Label>Username</Form.Label>\n              <InputGroup isValidation>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"username\"\n                  value={values.username}\n                  onChange={handleChange}\n                  isInvalid={!!errors.username}\n                  isValid={touched.username && !errors.username}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.username}\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Check\n                required\n                name=\"terms\"\n                label=\"Agree to terms and conditions\"\n                onChange={handleChange}\n                isInvalid={!!errors.terms}\n                feedback={errors.terms}\n                id=\"validationFormik0\"\n              />\n            </Form.Group>\n            <Button type=\"submit\">Submit form</Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}